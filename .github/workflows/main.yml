name: pack-usb-device-controller

on:
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: windows-latest
    env:
      CODE_NAME: USB-Device-Controller # 定义文件名 
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]

    steps:
    # 签出代码
    - uses: actions/checkout@v4
    
    - name: 设置Python ${{ matrix.python-version }} 环境
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Step 2: 配置缓存
    - name: 缓存 pip 依赖
      uses: actions/cache@v4
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 安装pip环境
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller
        python -m pip install -r requirements.txt

    - name: 打包项目
      run: |
        # 列出当前目录文件确认内容
        dir
        # 打包主程序并包含所有需要的文件
        # 使用 -w 参数隐藏控制台窗口
        pyinstaller -F -w disable_enable_usb_gui.py `
          --name "USB设备控制器" `
          --clean

    - name: 检查打包输出
      run: |
        # 列出dist目录内容，确认打包输出文件名
        dir dist
        # 列出build目录内容，用于调试
        dir build

    - name: 上传可执行文件
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.CODE_NAME }}
        path: dist/USB设备控制器.exe